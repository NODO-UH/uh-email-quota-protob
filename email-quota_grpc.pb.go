// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package uh_email_quota_protob

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion7

// EmalQuotaClient is the client API for EmalQuota service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type EmalQuotaClient interface {
	GetQuota(ctx context.Context, in *UserData, opts ...grpc.CallOption) (*UserQuota, error)
}

type emalQuotaClient struct {
	cc grpc.ClientConnInterface
}

func NewEmalQuotaClient(cc grpc.ClientConnInterface) EmalQuotaClient {
	return &emalQuotaClient{cc}
}

func (c *emalQuotaClient) GetQuota(ctx context.Context, in *UserData, opts ...grpc.CallOption) (*UserQuota, error) {
	out := new(UserQuota)
	err := c.cc.Invoke(ctx, "/routeguide.EmalQuota/GetQuota", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EmalQuotaServer is the server API for EmalQuota service.
// All implementations must embed UnimplementedEmalQuotaServer
// for forward compatibility
type EmalQuotaServer interface {
	GetQuota(context.Context, *UserData) (*UserQuota, error)
	mustEmbedUnimplementedEmalQuotaServer()
}

// UnimplementedEmalQuotaServer must be embedded to have forward compatible implementations.
type UnimplementedEmalQuotaServer struct {
}

func (UnimplementedEmalQuotaServer) GetQuota(context.Context, *UserData) (*UserQuota, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetQuota not implemented")
}
func (UnimplementedEmalQuotaServer) mustEmbedUnimplementedEmalQuotaServer() {}

// UnsafeEmalQuotaServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to EmalQuotaServer will
// result in compilation errors.
type UnsafeEmalQuotaServer interface {
	mustEmbedUnimplementedEmalQuotaServer()
}

func RegisterEmalQuotaServer(s grpc.ServiceRegistrar, srv EmalQuotaServer) {
	s.RegisterService(&_EmalQuota_serviceDesc, srv)
}

func _EmalQuota_GetQuota_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EmalQuotaServer).GetQuota(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/routeguide.EmalQuota/GetQuota",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EmalQuotaServer).GetQuota(ctx, req.(*UserData))
	}
	return interceptor(ctx, in, info, handler)
}

var _EmalQuota_serviceDesc = grpc.ServiceDesc{
	ServiceName: "routeguide.EmalQuota",
	HandlerType: (*EmalQuotaServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetQuota",
			Handler:    _EmalQuota_GetQuota_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "email-quota.proto",
}
